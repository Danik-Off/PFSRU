function FindProxyForURL(url, host) {
    // Прокси для Shadowsocks
    var proxy = "SOCKS5 127.0.0.1:2080";  // Замените на ваш IP и порт Shadowsocks
    var direct = "DIRECT";  // Прямое соединение

    // Список частных сетей
    var privateNet = [
        ["10.0.0.0", "255.0.0.0"],
        ["172.16.0.0", "255.240.0.0"],
        ["192.168.0.0", "255.255.0.0"]
    ];

    // Регулярное выражение для IPv4 адресов
    var ip4Re = /^(\d{1,3}\.){3}\d{1,3}$/;

    // Проверка на частные сети
    if (host.match(ip4Re)) {
        for (var i = 0; i < privateNet.length; i++) {
            if (isInNet(host, privateNet[i][0], privateNet[i][1])) {
                return direct;
            }
        }
    }

    // Список доменов для Shadowsocks
    var shadowsocksDomains = [
        "twitter.com", "twimg.com", "t.co", "x.com",                   // Twitter/X
        "facebook.com", "fbcdn.net", "fb.com", "messenger.com",        // Facebook и Messenger
        "instagram.com", "cdninstagram.com",                           // Instagram
        "youtube.com", "ytimg.com", "youtu.be",                        // YouTube
        "googleapis.com", "gstatic.com", "l.google.com", 
        "ggpht.com", "googleusercontent.com", "redirector.googlevideo.com",  // Google сервисы
        "openai.com", "chatgpt.com"                                    // ChatGPT и OpenAI
    ];

    // Проверка доменов из списка
    for (var i = 0; i < shadowsocksDomains.length; i++) {
        // Учитываем основной домен и поддомены
        if (dnsDomainIs(host, shadowsocksDomains[i]) || shExpMatch(host, "*." + shadowsocksDomains[i])) {
            return proxy;
        }
    }

    // Дополнительные проверки для загрузки видео
    if (shExpMatch(url, "*youtube.com/get_video_info*") || 
        shExpMatch(url, "*youtube.com/api/timedtext*") || 
        shExpMatch(url, "*youtube.com/watch*") || 
        shExpMatch(url, "*redirector.googlevideo.com*") || 
        shExpMatch(url, "*googlevideo.com*")) {
        return proxy;
    }

    // Если ни одно условие не подошло - прямое соединение
    return direct;
}
